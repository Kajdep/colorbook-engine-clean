version: '3.8'

services:
  app:
    build: 
      context: ..
      dockerfile: deploy/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # Database
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/colorbook_engine
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=colorbook_engine
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      # Security
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      # Payment Processing
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_PRO_PRICE_ID=${STRIPE_PRO_PRICE_ID}
      - STRIPE_ENTERPRISE_PRICE_ID=${STRIPE_ENTERPRISE_PRICE_ID}
      # File Storage
      - UPLOAD_DIR=${UPLOAD_DIR:-./uploads}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - ALLOWED_EXTENSIONS=${ALLOWED_EXTENSIONS:-jpg,jpeg,png,gif,pdf}
      # URLs
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:3001}
      # Monitoring
      - SENTRY_DSN=${SENTRY_DSN}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      # Redis (optional)
      - REDIS_URL=${REDIS_URL}
      # Email (optional)
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FROM_EMAIL=${FROM_EMAIL}
      # Features
      - ENABLE_REGISTRATION=${ENABLE_REGISTRATION:-true}
      - ENABLE_EMAIL_VERIFICATION=${ENABLE_EMAIL_VERIFICATION:-false}
      - ENABLE_PASSWORD_RESET=${ENABLE_PASSWORD_RESET:-true}
      - MAINTENANCE_MODE=${MAINTENANCE_MODE:-false}
    depends_on:
      - db
    volumes:
      - upload_data:/app/uploads
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=colorbook_engine
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  upload_data:
